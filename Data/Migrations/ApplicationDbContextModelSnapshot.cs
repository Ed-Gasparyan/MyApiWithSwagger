// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("AvailableCopies")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.Property<int>("PublishedYear")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalCopies")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "John Doe",
                            AvailableCopies = 4,
                            ISBN = "29192-33-221211",
                            PublishedYear = 2020,
                            Title = "C# Basics",
                            TotalCopies = 5
                        },
                        new
                        {
                            Id = 2,
                            Author = "Jane Smith",
                            AvailableCopies = 5,
                            ISBN = "3232-4442-19191",
                            PublishedYear = 2021,
                            Title = "ASP.NET Core",
                            TotalCopies = 6
                        },
                        new
                        {
                            Id = 3,
                            Author = "Andrew Hunt",
                            AvailableCopies = 10,
                            ISBN = "978-0201616224",
                            PublishedYear = 1999,
                            Title = "The Pragmatic Programmer",
                            TotalCopies = 10
                        },
                        new
                        {
                            Id = 4,
                            Author = "Robert C. Martin",
                            AvailableCopies = 3,
                            ISBN = "978-0132350884",
                            PublishedYear = 2021,
                            Title = "Clean Code",
                            TotalCopies = 3
                        });
                });

            modelBuilder.Entity("Domain.Models.BorrowRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BorrowDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReaderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ReaderId");

                    b.ToTable("BorrowRecords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 2,
                            BorrowDate = new DateTime(2025, 9, 14, 18, 19, 30, 0, DateTimeKind.Unspecified),
                            ReaderId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 3,
                            BorrowDate = new DateTime(2025, 9, 14, 18, 19, 30, 0, DateTimeKind.Unspecified),
                            ReaderId = 3
                        },
                        new
                        {
                            Id = 3,
                            BookId = 1,
                            BorrowDate = new DateTime(2025, 9, 14, 18, 19, 30, 0, DateTimeKind.Unspecified),
                            ReaderId = 2
                        });
                });

            modelBuilder.Entity("Domain.Models.Reader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Readers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ani@mail.com",
                            FullName = "Ani Hakobyan",
                            PhoneNumber = "+37443993555"
                        },
                        new
                        {
                            Id = 2,
                            Email = "david@mail.com",
                            FullName = "David Sargsyan",
                            PhoneNumber = "+37498323322"
                        },
                        new
                        {
                            Id = 3,
                            Email = "edgargasparyan10.12.2006@gmail.com",
                            FullName = "Edgar Gasparyan",
                            PhoneNumber = "+37499132004"
                        });
                });

            modelBuilder.Entity("Domain.Models.BorrowRecord", b =>
                {
                    b.HasOne("Domain.Models.Book", "Book")
                        .WithMany("BorrowRecords")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Models.Reader", "Reader")
                        .WithMany("BorrowRecords")
                        .HasForeignKey("ReaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Reader");
                });

            modelBuilder.Entity("Domain.Models.Book", b =>
                {
                    b.Navigation("BorrowRecords");
                });

            modelBuilder.Entity("Domain.Models.Reader", b =>
                {
                    b.Navigation("BorrowRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
